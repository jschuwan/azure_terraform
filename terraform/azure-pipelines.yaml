trigger: none

pool:
  vmImage: ubuntu-latest

stages:
- stage: Terraform
  jobs:
  - job: init
    steps:

    # This task should only be run if NOT first run.
    # If previous build failed, then it will not get passed init task.
    - task: DownloadPipelineArtifact@2
      enabled: false
      inputs:
        buildType: 'specific'
        project: '9a591d1a-b59e-4089-a839-aaf3cf17a3a9'
        definition: '149'
        buildVersionToDownload: 'latestFromBranch'
        branchName: 'refs/heads/pipeline-import-test'
        targetPath: '$(System.DefaultWorkingDirectory)/terraform/'
        
    - script: 'mv $(System.DefaultWorkingDirectory)/terraform/tf_state/terraform.tfstate ../'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      displayName: Move tfstate
    
    - script: 'ls .'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/tf_state/'

    - script: 'ls .'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

    - script: 'cat terraform.tfstate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

    - task: TerraformCLI@0
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        allowTelemetryCollection: true
      displayName: "init"

    - task: TerraformCLI@0
      enabled: true
      inputs:
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        allowTelemetryCollection: true
      displayName: "Validate"

    - task: TerraformCLI@0
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceName: 'Azure subscription 1(9fde5dd2-3d1a-4575-80c2-9ca0b55f5fc0)'
        allowTelemetryCollection: true
      displayName: "Plan"

    - task: TerraformCLI@0
      enabled: true
      inputs:
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceName: 'Azure subscription 1(9fde5dd2-3d1a-4575-80c2-9ca0b55f5fc0)'
        allowTelemetryCollection: true
      displayName: "Apply"

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/terraform/terraform.tfstate'
        artifact: 'tf_state'
        publishLocation: 'pipeline'