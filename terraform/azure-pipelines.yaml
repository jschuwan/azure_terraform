trigger: none

pool:
  vmImage: ubuntu-latest
  

variables:
  terraformDirectory: $(System.DefaultWorkingDirectory)/terraform
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/feature_terraformcloud')]

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TFBuild
    steps:
    
    - task: TerraformCLI@0
      inputs:
        command: 'init'
        workingDirectory: 'terraform'
        secureVarsFile: 'backend.env'
        commandOptions: |
         -backend-config "organization=$(p3-orgnization)" 
         -backend-config "token=$(p3-tf-user-token)" 
         -backend-config workspaces='[{name="test-workspace"}]'
        allowTelemetryCollection: true
      displayName: "TF Init"
    
    - task: TerraformCLI@0
      inputs:
        command: 'validate'
        workingDirectory: 'terraform'
        allowTelemetryCollection: true
      displayName: "TF Validate"

    - task: TerraformCLI@0
      inputs:
        command: 'plan'
        workingDirectory: 'terraform'
        environmentServiceName: 'test_connection'
        allowTelemetryCollection: true
      displayName: "TF Plan"

- stage:
  condition: and(succeeded(), eq(variables.isMaster, true))
  jobs:
  - job: Apply
    displayName: 'TF apply and outputs'
    steps:
    
    - task: TerraformCLI@0
      inputs:
        command: 'init'
        workingDirectory: 'terraform'
        secureVarsFile: 'backend.env'
        commandOptions: |
         -backend-config "organization=$(p3-orgnization)" \ 
          -backend-config "token=$(p3-tf-user-token)" \
          -backend-config "workspaces=[{name="test-workspace"}]"
        allowTelemetryCollection: true
      displayName: "TF Init" 

    - task: TerraformCLI@0
      inputs:
        command: 'apply'
        workingDirectory: 'terraform'
        environmentServiceName: 'test_connection'
        allowTelemetryCollection: true
      displayName: "TF Apply"

    # Output kubeconfig details into file
    - script: "terraform output kube_config_dev > may24_devops_config_dev"
      workingDirectory: 'terraform'
      displayName: Save kubeconfig dev

    - script: "terraform output kube_config_staging > may24_devops_config_staging"
      workingDirectory: 'terraform'
      displayName: Save kubeconfig staging

    # Delete EOD output from first and last lines of dev/staging config file
    # terraform output includes unnecessary text at beginning and last lines of file
    # so this needs to be removed.
    - script: "sed -i '1d;$d' may24_devops_config_dev"
      workingDirectory: 'terraform'
      displayName: Format kubeconfig dev

    - script: "sed -i '1d;$d' may24_devops_config_staging"
      workingDirectory: 'terraform'
      displayName: Format kubeconfig staging

    # Publish the kubeconfig files as artifacts
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'terraform/may24_devops_config_dev'
        artifact: 'kubeconfig_dev'
      displayName: Publish dev kubeconfig

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'terraform/may24_devops_config_staging'
        artifact: 'kubeconfig_staging'
      displayName: Publish staging kubeconfig
